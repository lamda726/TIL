python

1990년도에 만들어졌다!

일반적인 프로그래밍 언어들은 나름대로의 특색이 있다

- C, C++, C# : C계열의 프로그래밍 언어
  => 효율성을 추구하는 언어
      수행속도, 메모리 사용용량 최적화시키기 위해서
      일반적으로 많이 사용 ( 생각보다 어려운 언어 )

- Java : 서버쪽 응용 프로그램을 만드는데 최적화
	가장 객체지향을 잘 반영하고 있는 언어

- JavaScript : 클라이언트 쪽 응용 프로그램
	     Front-End Web Application

- Python : 프로그램을 쉽게 배워보아요!
	 자료구조, 데이터타입 같은 게 이해하기 쉽다.
	 자료구조를 이용해서 데이터를 처리하기가 쉽다.
	=> package가 추가되면서 데이터분석쪽에 강점을 가지기 시작해요
	- 빠른 시간 내에 배울 수 있다!
	- 무료!
	- indent가 강제된다! (=들여쓰기 무조건)
	- 웬만한 프로그램 다 만들 수 있다. 그런데 안되는 것도 있음(아래 두 가지)
	- 시스템 프로그램(C계열)은 못한다!
	- Mobile App은 만들 수 없다!
(R은 프로그래밍 언어라고 하기엔 한계점이 있지만, Python은 프로그래밍 언어 ㅇㅇ)

==========================================================================

개발환경부터 셋팅

- 두 가지 방법이 있다!
- 일반적인 프로그래밍( 웹 프로그래밍 )
  => Python을 설치하고 PyCharm을 설치해서 사용해요

- 데이터 분석쪽
  => Python + Jupyter notebook이라는 IDE를 사용
  => Anaconda라는 통합환경을 이용하면 편하다!

  => Python은 3.x, 2.x 두 가지 형태의 버전 (서로 호환성이 없다)
  => anaconda 3을 받았는데 파이썬은 3.7버전을 기반으로 하고 있다

- Anaconda를 설치했습니다!

- pip라고 불리는 프로그램의 버전을 최신버전으로 일단 업데이트시킬 것
- 일단 anaconda prompt를 관리자 모드로 실행(시작화면에 고정한 후 마우스 오른쪽 눌러서 실행 가능)

- python 입력해서 버전 제대로 뜨는지 확인 먼저 한 후 exit() 입력해서 나가줌

- python -m pip install --upgrade pip

- 우리가 코드를 작성하고 실행할 가상환경을 생성
- 가상환경을 만들때 python버전을 3.6버전을 이용( 다른 프로그램과 호환 시, 3.6이 가장 안정적인 버전이라서)

- conda create -n cpu_env python=3.6 openssl 
(위의 값 입력하고 중간에 동의 구할 때 y 입력해줄 것)

- 가상환경으로 전환해보아요!
  base -> cpu_env 전환
 - activate cpu_env 입력해줄 것

- IDE(통합개발환경)를 실행해야 한다!  (ex: RStudio)
  Jupyter notebook이라는 이름의 IDE를 사용
  Web 기반의 개발환경 -> browser를 이용해서 개발
  이 Jupyter notebook이 특정 가상환경을 기반으로 실행되어야 해요!

  이 Jupyter notebook이 특정가상환경을 이용해서 프로그램을 작성하고 실행할 수 있도록
  도와주는 패키지를 하나 설치! => nb_conda
- conda install nb_conda 입력해줄 것!

  Jupyter notebook에서 코드를 작성하고 실행하기 위한 설정
  => ipykernel을 설치하고 설정을 잡아야해요!

- python -m ipykernel install --user --name cpu_env --display-name=[CPU_ENV]

(설치된 곳 경로 : Installed kernelspec cpu_env in C:\Users\student\AppData\Roaming\jupyter\kernels\cpu_env)

현재 가상환경이 어떤게 설치되어 있는지 확인
conda info --envs 입력해줄 것!

(가상환경을 삭제할 경우, conda remove --name cpu_env --all 입력해줄 수 있음.
이때 폴더는 남기 때문에 폴더 수동으로 직접 정리해줘야함)

========================================================================

IDE( jupyter notebook )를 실행시키기 위한 환경파일을 생성해 보자!

jupyter notebook --generate-config

사용자/student/.jupyter 가서 노트패드로 연 다음 261번째 줄에서 파이선 다룰 디렉토리 설정해줘야함
C:/python_DA 라는 이름으로 설정, C밑에 새로운 폴더 python_DA 생성해주면 된다!

그 후 cmd 창에 jupyter notebook 입력해주면 주피터 창이 !!!뜬다!!(안뜨면 어딘가에서 설정 잘못된 것)


새로운 셀 추가 방법
a : 위쪽에 생성
b : 아래쪽에 생성
dd : 셀 삭제

o : output영역을 보여주고
l : line 번호를 

실행은 셀 단위로 이뤄짐


